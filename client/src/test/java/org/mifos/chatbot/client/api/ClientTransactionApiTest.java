/**
 * Copyright 2018 Dingfan Zhao
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


//package org.mifos.chatbot.client.api;
//
//import org.mifos.chatbot.client.ApiException;
//import org.mifos.chatbot.client.model.ClientTransactionData;
//import org.mifos.chatbot.client.model.CommandProcessingResult;
//import org.junit.Test;
//import org.junit.Ignore;
//
//import java.util.ArrayList;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Map;
//
///**
// * API tests for ClientTransactionApi
// */
//@Ignore
//public class ClientTransactionApiTest {
//
//    private final ClientTransactionApi api = new ClientTransactionApi();
//
//
//    /**
//     * List Client Transactions
//     *
//     * The list capability of client transaction can support pagination.  Mandatory Arguments : offset     Integer Mandatory, defaults to 0      Indicates the result from which pagination starts limit     Integer Mandatory, defaults to 200      Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit&#x3D;0, or limit&#x3D;-1    Example Requests: clients/189/transactions clients/189/transactions?offset&#x3D;10&amp;limit&#x3D;50
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void retrieveAllClientTransactionsTest() throws ApiException {
//        Long clientId = null;
//        Integer offset = null;
//        Integer limit = null;
//        ClientTransactionData response = api.retrieveAllClientTransactions(clientId, offset, limit);
//
//        // TODO: test validations
//    }
//
//    /**
//     * Retrieve a Client Transaction
//     *
//     * Example Requests: clients/1/transactions/1   clients/1/transactions/1?fields&#x3D;id,officeName
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void retrieveClientTransactionTest() throws ApiException {
//        Long clientId = null;
//        Long transactionId = null;
//        ClientTransactionData response = api.retrieveClientTransaction(clientId, transactionId);
//
//        // TODO: test validations
//    }
//
//    /**
//     * Undo a Client Transaction
//     *
//     *
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void undoClientTransactionTest() throws ApiException {
//        Long clientId = null;
//        Long transactionId = null;
//        String command = null;
//        CommandProcessingResult response = api.undoClientTransaction(clientId, transactionId, command);
//
//        // TODO: test validations
//    }
//
//}
